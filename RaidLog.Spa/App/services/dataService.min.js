function makeRiskDto(){return{id:0,version:"",riskNumber:0,description:"",raisedDate:moment().format("YYYY-MM-DD"),raisedBy:"",rifCategoryId:null,isProjectRisk:!0,workstream:"",commentary:"",approachId:null,impactId:null,likelihoodId:null,owner:""}}function makeNewAssumption(){return{id:null,version:null,assumptionNumber:null,description:"",workstream:"",owner:"",validatedBy:"",statusId:null,supportingDocumentation:""}}function makeNewIssueDto(){return{id:null,version:null,issueNumber:null}}function makeNewDependencyDto(){return{id:null,version:null,dependencyNumber:null}}function makeNewQueryDto(){return{id:null,version:null,queryNumber:null}}function getReferenceData(){return refDataDfd}function getProjects(){return http.get("/api/projects/").done(function(n){logger.logSuccess("Retrieved Projects",n,MODULE_NAME,!0)}).fail(function(){logger.logError("Could not retrieve Projects",arguments,MODULE_NAME,!0)})}function getProject(n){return http.get("/api/projects/"+n).done(function(n){return logger.logSuccess("Retrieved Project",n,MODULE_NAME,!1)}).fail(function(n){return logger.logError("Error retrieving Project",n,MODULE_NAME,!0)})}function getProjectRisks(n){return $.getJSON("/api/project/"+n+"/risks/").done(function(n){return logger.logSuccess("Retrieved Project Risks",n,MODULE_NAME,!0)}).fail(function(n){return logger.logError("Error retrieving Project Risks",n,MODULE_NAME,!0)})}function getProjectAssumptions(n){return $.getJSON("/api/project/"+n+"/assumptions/").done(function(n){logger.logSuccess("Retrieved Project Assumptions",n,MODULE_NAME,!0)}).fail(function(n){logger.logError("Error retrieving Project Assumptions",n,MODULE_NAME,!0)})}function getProjectIssues(n){return $.getJSON("/api/project/"+n+"/issues/")}function getProjectDependencies(n){return $.getJSON("/api/project/"+n+"/dependencies/")}function getProjectQueries(n){return $.getJSON("/api/project/"+n+"/queries/")}function saveProject(n){var t={url:"/api/projects/",data:n,dataType:"json"};return n.id?(t.url=t.url+n.id,t.type="PUT"):t.type="POST",$.ajax(t).done(function(){logger.logSuccess("Saved Project",null,"services/dataService",!0)}).fail(function(t,i){logger.logError("Error saving the Project",{},"services/dataService",!0),logger.logError(i+" "+t.responseText,n,"services/dataService",!1)})}function saveRisk(n,t){var i={data:t};return"id"in t?(i.url="/api/risks/"+t.id,i.type="PUT"):(i.url="/api/project/"+n+"/risks/",i.type="POST"),$.ajax(i).done(function(){logger.log("Saved Risk",null,null,!0)}).fail(function(n,i){logger.logError(i+" "+n.responseText,t,"backend",!1),logger.logError("Error saving the Risk",null,"backend",!0)})}function saveAssumption(n,t){var i={data:t};return"id"in t?(i.url="/api/assumptions/"+t.id,i.type="PUT"):(i.url="/api/project/"+n+"/assumptions/",i.type="POST"),$.ajax(i).done(function(){logger.log("Saved Assumption",null,MODULE_NAME,!0)}).fail(function(n,i){logger.logError(i+" "+n.responseText,t,MODULE_NAME,!1),logger.logError("Error saving the Risk",null,MODULE_NAME,!0)})}var logger=require("./services/logger"),http=require("plugins/http"),referenceData,MODULE_NAME,refDataDfd;exports.makeRiskDto=makeRiskDto,exports.makeNewAssumption=makeNewAssumption,exports.makeNewIssueDto=makeNewIssueDto,exports.makeNewDependencyDto=makeNewDependencyDto,exports.makeNewQueryDto=makeNewQueryDto,MODULE_NAME="services/dataService",refDataDfd=http.get("/api/ReferenceData/").done(function(n){referenceData=n,logger.logSuccess("Retrieved reference data",{},MODULE_NAME,!0)}).fail(function(n,t){logger.logError("Could not retrieve reference data ("+t+")",arguments,MODULE_NAME,!0)}),exports.getReferenceData=getReferenceData,exports.getProjects=getProjects,exports.getProject=getProject,exports.getProjectRisks=getProjectRisks,exports.getProjectAssumptions=getProjectAssumptions,exports.getProjectIssues=getProjectIssues,exports.getProjectDependencies=getProjectDependencies,exports.getProjectQueries=getProjectQueries,exports.saveProject=saveProject,exports.saveRisk=saveRisk,exports.saveAssumption=saveAssumption