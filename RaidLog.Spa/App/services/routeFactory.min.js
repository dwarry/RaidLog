function addRoute(n){return allRoutes.push(n),n}var router=require("plugins/router"),allRoutes=[],mainRouter,projectList=addRoute("",{title:"Projects",moduleId:"viewmodels/projectList",nav:!0}),projectRisks=addRoute("projects/:projectId/risks",{title:"Project Risks",moduleId:"viewmodels/riskList",nav:!1}),projectAssumptions=addRoute("projects/:projectId/assumptions",{title:"Project Assumptions",moduleId:"viewmodels/assumptionList",nav:!1}),projectIssues=addRoute("projects/:projectId/issues",{title:"Project Issues",moduleId:"viewmodels/issueList",nav:!1}),projectDependencies=addRoute("projects/:projectId/dependencies",{title:"Project Dependencies",moduleId:"viewmodels/dependencyList",nav:!1}),projectQueries=addRoute("projects/:projectId/queries",{title:"Project Queries",moduleId:"viewmodels/queryList",nav:!1}),projectIdRegex=/:projectId/,routeFactory={initializeRouter:function(){return router.map(allRoutes),mainRouter=router.buildNavigationModel(),router.activate()},makeProjectRiskLink:function(n){return"#/"+projectRisks.replace(projectIdRegex,n.toString())},makeProjectAssumptionLink:function(n){return"#/"+projectAssumptions.replace(projectIdRegex,n.toString())},makeProjectIssueLink:function(n){return"#/"+projectIssues.replace(projectIdRegex,n.toString())},makeProjectDependencyLink:function(n){return"#/"+projectDependencies.replace(projectIdRegex,n.toString())},makeProjectQueryLink:function(n){return"#/"+projectQueries.replace(projectIdRegex,n.toString())}};module.exports=routeFactory